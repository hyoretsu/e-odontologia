name: Backend CI/CD

on:
  push:
    paths: [ 'backend/**' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@main
      with:
        node-version: 'lts/*'

    - name: Enable PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 'latest'

    - name: Get PNPM store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm
        restore-keys: |
          ${{ runner.os }}-pnpm

    - name: Install dependencies
      run: pnpm i

    - name: Build the app
      run: pnpm -F backend build

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Copy relevant files to deploy server
      run: sshpass -p ${{ secrets.SSH_PASS }} scp -o StrictHostKeyChecking=no -r backend/dist backend/prisma ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/srv/ton/backend

    - name: Run DB migrations
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        password: ${{ secrets.SSH_PASS }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        script: |
          cd /srv/ton/backend
          pnpm prisma migrate deploy

    - name: Restart backend
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        password: ${{ secrets.SSH_PASS }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        script: |
          cd /srv/ton
          pnpx pm2 restart ton --update-env
